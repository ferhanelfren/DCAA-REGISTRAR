/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_registrar2;

import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author GOD
 */
public class table_records_data extends javax.swing.JFrame {

    /**
     * Creates new form table_records_data
     */
    
     DefaultListModel model = new DefaultListModel();
    String filepath;
    public table_records_data() {
        initComponents();
       // Student();
       // FillList();
       
       sds();
       
       
       
         StudentCombo();
        StudentTable();
        FillList();
      
       
    }

    Connection Mycon;
    ResultSet rs;

    
    
    
    public class student
            
    {
        
        
        int id;
        
        String name;
        
        
        public student (int id, String name)
        {
            
            this.id = id;
            this.name= name;
            
            
        }

        
        
        @Override
        public String toString()
        {
            
            return name;
            
        } 
    }

    
    
    
    private void sds(){
        
       // String item = students2.getEditor().getItem().toString();
        
        //students2.getEditor().setItem("Text Has Changed");
        
            
          
          AutoCompleteDecorator.decorate(students1);
        
        
    }
     
    
   
        private void FillList()
    {
                                       
        
                                                                    
                                            
                                            try {
                                                
                                                
                                           Class.forName("com.mysql.jdbc.Driver");
                                           Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root"); 
                                           PreparedStatement ps;   
                                           ps=Mycon.prepareStatement("select * from enrolled_students");
                                           ResultSet rs = ps.executeQuery();
                                            
                                           
                                       
                                            DefaultListModel model =  new DefaultListModel();
                                            
                                            
                                                while (rs.next()) 
                                                {          
                                                    String name = rs.getString("sex");
                                                    //String gender = rs.getString("sex"); 
                                                    model.addElement(name);
                                                  //  model.addElement(gender);
                                                }
                                                jList1.setModel(model);
                                                
                                                
                                        }  catch (ClassNotFoundException  ex) {
                                                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
                                        }catch ( SQLException ex) {
                                                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
                                        }
    }
       
    

    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        students1 = new javax.swing.JComboBox();
        search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        STUDENT_NAME = new javax.swing.JTextField();
        ENROLLMENT = new javax.swing.JTextField();
        enrollment = new javax.swing.JButton();
        students2 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        save = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        students1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        students1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                students1MouseClicked(evt);
            }
        });
        students1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                students1KeyPressed(evt);
            }
        });

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        jList1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jList1.setForeground(new java.awt.Color(0, 0, 0));
        jList1.setSelectionBackground(new java.awt.Color(43, 70, 60));
        jList1.setSelectionForeground(new java.awt.Color(244, 241, 233));
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        enrollment.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        enrollment.setForeground(new java.awt.Color(204, 0, 0));
        enrollment.setText("Attach File");
        enrollment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 51)));
        enrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollmentActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student's Name"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable);

        save.setText("save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(199, 199, 199)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(STUDENT_NAME)
                                            .addComponent(ENROLLMENT, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(enrollment, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(students2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(154, 154, 154)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(students1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(222, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(572, 572, 572))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(students1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(STUDENT_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ENROLLMENT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enrollment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(students2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(save)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
  
    
    private void StudentTable()
    
    {
        
        int c;
           try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root");   
                PreparedStatement ps;
                ps=Mycon.prepareStatement("select * from enrolled_students");
                rs= ps.executeQuery();
                
                DefaultTableModel modelt = (DefaultTableModel)jTable.getModel();
                ResultSetMetaData rsd=rs.getMetaData();
                   c = rsd.getColumnCount(); 
                
                     modelt.setRowCount(0);
//                while (rs.next())
//                
//                {
//                    
//                    
//                  //  students.addItem(new student(rs.getInt(1), rs.getString(6)));
//              //  jComboBox1.addItem(new student(rs.getInt(1), rs.getString(6)));
//                    // schoolyr.addItem(new Add_Students.SchoolYear2(rs.getInt(1),rs.getString(2)));
//                    
//                   // schoolyr.addItem(new Add_Students_Info.SchoolYear2(rs.getInt(1),rs.getString(2)));
//                    
//                  // model.addElement(new student(rs.getInt(1), rs.getString(6)));
//               
//                  
//                }
                
                                    while (rs.next()) 
                                                {          
                                                    Vector v = new Vector();
                                                    
                                                    for (int i = 0; i <= 35; i++) 
                                                    { 
                                                         //v.add(rs.getString("id")); 
                                                           
                                                        v.add(new student(rs.getInt(1), rs.getString(6)));
                                                    }
                                                    
                                                    modelt.addRow(v); 
                                                   
                                                }


                    

               //jList1.setModel(model);
               
               
            }catch (ClassNotFoundException | SQLException  ex) {
                Logger.getLogger(table_records_data.class.getName()).log(Level.SEVERE, null, ex);
            }

            
        
        
    }
    
    
    
     private void StudentCombo()
    
    {
        
        int c;
           try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root");   
                PreparedStatement ps;
                ps=Mycon.prepareStatement("select * from enrolled_students");
                rs= ps.executeQuery();
                
                DefaultTableModel modelt = (DefaultTableModel)jTable.getModel();
                ResultSetMetaData rsd=rs.getMetaData();
                   c = rsd.getColumnCount(); 
                
                     modelt.setRowCount(0);
                while (rs.next())
                
                {
                    
                    
                    students1.addItem(new student(rs.getInt(1), rs.getString(6)));
              //  jComboBox1.addItem(new student(rs.getInt(1), rs.getString(6)));
                    // schoolyr.addItem(new Add_Students.SchoolYear2(rs.getInt(1),rs.getString(2)));
                    
                   // schoolyr.addItem(new Add_Students_Info.SchoolYear2(rs.getInt(1),rs.getString(2)));
                    
                  // model.addElement(new student(rs.getInt(1), rs.getString(6)));
               
                  
                }
                
                           
               
               
            }catch (ClassNotFoundException | SQLException  ex) {
                Logger.getLogger(table_records_data.class.getName()).log(Level.SEVERE, null, ex);
            }

            
        
        
    }
    
    

      public void LoadSearchData(){
         
         
         
    
//           try {
//               String name="%"+this.search.getText()+"%";
//             
//                 
//                DefaultTableModel model =  (DefaultTableModel)jTable1.getModel() ;
//                 int col;
//                Class.forName("com.mysql.cj.jdbc.Driver");
//               Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root");   
//               PreparedStatement ps;
//               ps = Mycon.prepareStatement("select * from enrolled_students where fullname LIKE '"+name+"'"); 
//
//             ResultSet rs= ps.executeQuery();
//             
//               
//           model.setRowCount(0);
//                         while(rs.next()){   
//                             
//                             //number sa mga columns sa imohang tables
//                        model.addRow(new Object[]{rs.getString(6)});
//    
//      
//    
//                                }  
//             
//            }catch (ClassNotFoundException  ex) {
//                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
//            }catch ( SQLException ex) {
//                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
//            }

            DefaultComboBoxModel moda = (DefaultComboBoxModel)students1.getModel(); 
             
            try {
               String name="%"+this.search.getText()+"%";
             
       
                Class.forName("com.mysql.cj.jdbc.Driver");
               Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root");   
               PreparedStatement ps;
               ps = Mycon.prepareStatement("select * from enrolled_students where fullname LIKE '"+name+"'"); 

             ResultSet rs= ps.executeQuery();
             
             
                         while(rs.next()){   
                            moda.addElement(new Object[]{rs.getString(6)});
                                            }  
             
            }catch (ClassNotFoundException  ex) {
                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
            }catch ( SQLException ex) {
                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
            }




         
         
     }
    
    
    
    
    
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
      // JList list = (JList)evt.getSource();
        DefaultListModel mod = (DefaultListModel) jList1.getModel();
      int selecIndex = (int) jList1.getSelectedValue();
        
        
           if (evt.getClickCount() == 1) {
               
               //String index = list.locationToIndex(evt.getPoint());
            //   String index = list.getSelectedValue().toString();
             //   int index = (int) list.getSelectedValue();
            //    int i = Integer.parseInt( list.getSelectedValue().toString());
                 
      //      students2.setSelectedItem(mod.get(Integer.parseInt(selecIndex)));
            
              //  students2.setSelectedItem(model.getElementAt(selecIndex, 28).toString() );
                //.setSelectedItem(list.getValueAt(selecIndex, 28).toString() );

               //STUDENT_NAME.setText(index);
               
               
               
       
           DefaultComboBoxModel comboModel = new DefaultComboBoxModel();
            JComboBox comboBox = new JComboBox();
            comboBox.setModel(comboModel );
            
//            comboBox.setSelectedIndex(index);
            
               students1.getModel();
               
           }
    }//GEN-LAST:event_jList1MouseClicked

    private void enrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollmentActionPerformed

        JFileChooser jfchoose = new JFileChooser();
        jfchoose.showOpenDialog(this);

        try {

            File f =  jfchoose.getSelectedFile();
            //filepath = f.getName();
            filepath = f.getAbsolutePath();
            filepath = filepath.replace('\\', '/');
            ENROLLMENT.setText(filepath);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Error");
        }

    }//GEN-LAST:event_enrollmentActionPerformed

    private void students1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_students1MouseClicked
       
       
        
    }//GEN-LAST:event_students1MouseClicked

    private void students1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_students1KeyPressed
        
        
   
  
         
        
       
    }//GEN-LAST:event_students1KeyPressed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased

        LoadSearchData();
    }//GEN-LAST:event_searchKeyReleased

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked

        DefaultTableModel model2 =  (DefaultTableModel)jTable.getModel() ;
        int selecIndex = jTable.getSelectedRow();

        
        STUDENT_NAME.setText(model2.getValueAt(selecIndex, 0).toString());
        students1.setSelectedItem(model2.getValueAt(selecIndex, 0).toString() );
//        jComboBox2.setSelectedItem(model2.getValueAt(selecIndex, 0).toString() );
    }//GEN-LAST:event_jTableMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
       
        
        student sy = (student)students1.getSelectedItem();
        //String.valueOf(object) 
       // student sy = (student)jTable1.getModel();
        String z = ENROLLMENT.getText();
        
        
        
        
         try {   
        Class.forName("com.mysql.cj.jdbc.Driver");
        Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root");
        PreparedStatement ps;
       
       ps=Mycon.prepareStatement("INSERT INTO student_records ( enrolled_students_id, crt_enrollment) VALUES (?,?)");
       ps.setInt(1, sy.id);
       ps.setString(2, z);
       
      
        ps.execute();      

                    JOptionPane.showMessageDialog(null, "Student Successfully Enrolled");

                    
                    
                // DESKTOP.schoolyear.setText(jComboBox1.getSelectedItem().toString());
               
         } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Records.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Records.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(table_records_data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(table_records_data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(table_records_data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(table_records_data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new table_records_data().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ENROLLMENT;
    private javax.swing.JTextField STUDENT_NAME;
    private javax.swing.JButton enrollment;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JComboBox students1;
    private javax.swing.JComboBox<String> students2;
    // End of variables declaration//GEN-END:variables
}
