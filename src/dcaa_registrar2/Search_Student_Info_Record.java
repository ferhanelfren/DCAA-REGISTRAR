/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcaa_registrar2;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author GOD
 */
public class Search_Student_Info_Record extends javax.swing.JFrame {

    /**
     * Creates new form Search_Student_Info_Record
     */
    public Search_Student_Info_Record() {
        initComponents();
        
        table_update();
        
            jTable.getTableHeader().setFont(new Font("Segui UI", Font.BOLD,20));
            jTable.getTableHeader().setOpaque(false);
            jTable.getTableHeader().setBackground(new Color(43,70,60));
            jTable.getTableHeader().setForeground(new Color(255,255,255));
        
            
          
    }

//    Show_Jtable_row_data jtRowData = new Show_Jtable_row_data();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(244, 241, 233));

        jTable.setAutoCreateRowSorter(true);
        jTable.setBackground(new java.awt.Color(244, 241, 233));
        jTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTable.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "School Year", "Lrn Status", "S.A  No.", "LRN No.", "Student Name", "Birth Date", "Gender", "Age", "Indigent People", "Tribe", "Mother Tongue", "Address", "Zip Code", "Father's Name", "Mother's Name", "Guardian's Name", "Tell No.", "Cell No.", "Last Grade Level Completed", "Last School Year Completed", "School Name", "School Id", "School Address", "Semester", "Track", "Strand", "Grade Level", "Track & Strand"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setFocusable(false);
        jTable.setGridColor(new java.awt.Color(255, 255, 255));
        jTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable.setOpaque(false);
        jTable.setRequestFocusEnabled(false);
        jTable.setRowHeight(70);
        jTable.setSelectionBackground(new java.awt.Color(43, 70, 60));
        jTable.setSelectionForeground(new java.awt.Color(244, 241, 233));
        jTable.setShowVerticalLines(false);
        jTable.getTableHeader().setReorderingAllowed(false);
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable);

        jPanel3.setBackground(new java.awt.Color(244, 241, 233));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 30), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 51, 51));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        search.setBackground(new java.awt.Color(204, 204, 204));
        search.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        search.setForeground(new java.awt.Color(43, 70, 60));
        search.setBorder(null);
        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(search, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(43, 70, 60));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("All Rights Reserved 2020");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(392, 392, 392))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 
    
    
    
    Connection Mycon;
    ResultSet rs;
    

    private void table_update()
    {
                                       
        
                                                                    int c;
                                            
                                            try {
                                                
                                                
                                           Class.forName("com.mysql.cj.jdbc.Driver");
                                           Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root"); 
                                           PreparedStatement ps;   
                                           ps=Mycon.prepareStatement("select a.id, s.name, a.lrnStatus, a.student_account_no, a.lrnNumber, a.fullname, a.bdate, a.sex, a.age, a.ip, a.ip_status, a.mother_tongue, a.address, a.zip_code, a.fathername, a.mothername, a.guardianname, a.telephone, a.cellphone, a.last_grade_level_completed, a.last_school_year_completed, a.school_name, a.school_id, a.school_address, a.semester, a.track, a.strand, a.grade_level, a.enrolled_track from enrolled_students a, school_year s  where a.school_year_id = s.id ");
                                           ResultSet rs = ps.executeQuery();
                                            
                                            
                                            ResultSetMetaData rsd=rs.getMetaData();
                                            
                                           c = rsd.getColumnCount();
                                            
                                                DefaultTableModel model =  (DefaultTableModel)jTable.getModel() ;
                                            
                                            
                                          DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
                                              rightRenderer.setHorizontalAlignment(JLabel.LEFT);
                                              jTable.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
                                              
                                                   
                                                   
                                              
                                              
                                            
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(0));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(0));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(0));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(3));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                            jTable.removeColumn(jTable.getColumnModel().getColumn(4));
                                           
                                                
                                             

                                                jTable.getColumnModel().getColumn(0).setPreferredWidth(10);
                                                jTable.getColumnModel().getColumn(1).setPreferredWidth(50);
                                                 jTable.getColumnModel().getColumn(2).setPreferredWidth(150);
                                                jTable.getColumnModel().getColumn(3).setPreferredWidth(9);
                                                 jTable.getColumnModel().getColumn(4).setPreferredWidth(50);
                                             
                                             
                                              
                                             
                                                   


                                                       
                                    
                                                             
                                            
                                            model.setRowCount(0);
                                            
                                                while (rs.next()) 
                                                {          
                                                    Vector v = new Vector();
                                                    
                                                    for (int i = 0; i <= 35; i++) 
                                                    { 
                                                         v.add(rs.getString("id")); 
                                                          v.add(rs.getString("name"));
                                                          v.add(rs.getString("lrnStatus")); 
                                                           v.add(rs.getString("student_account_no")); 
                                                            v.add(rs.getString("lrnNumber")); 
                                                             v.add(rs.getString("fullname")); 
                                                                 v.add(rs.getString("bdate"));
                                                                  v.add(rs.getString("sex"));
                                                                   v.add(rs.getString("age")); 
                                                                    v.add(rs.getString("ip")); 
                                                                     v.add(rs.getString("ip_status"));
                                                                      v.add(rs.getString("mother_tongue")); 
                                                                       v.add(rs.getString("address"));
                                                                        v.add(rs.getString("zip_code"));
                                                                        v.add(rs.getString("fathername"));
                                                                        v.add(rs.getString("mothername"));
                                                                        v.add(rs.getString("guardianname"));
                                                                        v.add(rs.getString("telephone"));
                                                                        v.add(rs.getString("cellphone"));
                                                                        
                                                                       v.add(rs.getString("last_grade_level_completed"));
                                                                                    v.add(rs.getString("last_school_year_completed")); 
                                                                                    v.add(rs.getString("school_name")); 
                                                                                     v.add(rs.getString("school_id"));
                                                                                     v.add(rs.getString("school_address")); 
                                                                                       v.add(rs.getString("semester")); 
                                                                                        v.add(rs.getString("track")); 
                                                                                         v.add(rs.getString("strand")); 
                                                                                         v.add(rs.getString("grade_level"));
                                                                                          v.add(rs.getString("enrolled_track")); 
                                                                                   
                                                    }
                                                    
                                                    model.addRow(v); 
                                                   
                                                }
                                        }  catch (ClassNotFoundException  ex) {
                                                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
                                        }catch ( SQLException ex) {
                                                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
                                        }
    }
       
       
    
        public void LoadSearchData(){
         
         
         
    
           try {
               String name="%"+this.search.getText()+"%";
               String lrn="%"+this.search.getText()+"%";
                 
                DefaultTableModel model =  (DefaultTableModel)jTable.getModel() ;
                 int col;
                Class.forName("com.mysql.cj.jdbc.Driver");
               Mycon=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/dcaa_registrar","root","root");   
               PreparedStatement ps;
               ps = Mycon.prepareStatement("select * from enrolled_students where fullname LIKE '"+name+"'"); 

                ResultSet rs= ps.executeQuery();


              model.setRowCount(0);
                            while(rs.next()){   

                                //number sa mga columns sa imohang tables
                           model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13),rs.getString(14),rs.getString(15),rs.getString(16),rs.getString(17),rs.getString(18),rs.getString(19),rs.getString(20),rs.getString(21),rs.getString(22),rs.getString(23),rs.getString(24),rs.getString(25),rs.getString(26),rs.getString(27),rs.getString(28),rs.getString(29)});


    
                                }  
             
            }catch (ClassNotFoundException  ex) {
                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
            }catch ( SQLException ex) {
                Logger.getLogger(table_suggetions.class.getName()).log(Level.SEVERE, null, ex);
            }

     
         
         
     }
    
    
    
    public class SchoolYear2 
       {
           
           int id;
           String name;
           
           
           public SchoolYear2 (int id, String name)

           {
            
               this.id=id;
               this.name=name;
               
           }
           
           
           
           public String toString ()
            {
               
               return name;
               
               
            }
   
       }
    
    
            

    
    
    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
       
     
        DefaultTableModel model2 =  (DefaultTableModel)jTable.getModel() ;
        int selecIndex = jTable.getSelectedRow();
         //SchoolYear2 sy = (SchoolYear2)schoolyr.getSelectedItem(); 
        
       String schoolyear=model2.getValueAt(selecIndex, 1).toString();
       String lrnstat=model2.getValueAt(selecIndex, 2).toString();
       String stuaccount=model2.getValueAt(selecIndex, 3).toString();
     String lrn=model2.getValueAt(selecIndex, 4).toString();
        String studentname=model2.getValueAt(selecIndex, 5).toString();
                String bdate=model2.getValueAt(selecIndex, 6).toString();
                String gender=model2.getValueAt(selecIndex, 7).toString();
                String age=model2.getValueAt(selecIndex, 8).toString();
                String ip=model2.getValueAt(selecIndex, 9).toString();
                String ipstat=model2.getValueAt(selecIndex, 10).toString();
                String mothertongue=model2.getValueAt(selecIndex, 11).toString();
                String address=model2.getValueAt(selecIndex, 12).toString();
                String zip=model2.getValueAt(selecIndex, 13).toString();
                String father=model2.getValueAt(selecIndex, 14).toString();
                        String mother=model2.getValueAt(selecIndex, 15).toString();
                String guard=model2.getValueAt(selecIndex, 16).toString();
                String tell=model2.getValueAt(selecIndex, 17).toString();
                String cp=model2.getValueAt(selecIndex, 18).toString();
                String lastgrade=model2.getValueAt(selecIndex, 19).toString();
                        String lstsy=model2.getValueAt(selecIndex, 20).toString();
                        String schoolname=model2.getValueAt(selecIndex, 21).toString();
                        String schoolid=model2.getValueAt(selecIndex, 22).toString();
                        String schooladd=model2.getValueAt(selecIndex, 23).toString();
                        String sem=model2.getValueAt(selecIndex, 24).toString();
                        String track=model2.getValueAt(selecIndex, 25).toString();
                        String strand=model2.getValueAt(selecIndex, 26).toString();
                        String grade=model2.getValueAt(selecIndex, 27).toString();
                        String trackenroll=model2.getValueAt(selecIndex, 28).toString();
                        
                        
                        
                //Students_Information_Records.usernamedesk.setText(username.getText());      
                  Students_Information_Records dk= new  Students_Information_Records();
                  
                  
                  
                  Students_Information_Records.SCHOOLYEAR.setText(schoolyear);
                   Students_Information_Records.LRN_STATUS.setText(lrnstat);
                    Students_Information_Records.STUDENT_ACCOUNT.setText(stuaccount);
                     Students_Information_Records.LRN.setText(lrn);
                      Students_Information_Records.STUDENT_NAME.setText(studentname);
                       Students_Information_Records.BDATE.setText(bdate);
                        Students_Information_Records.AGE.setText(gender);
                         Students_Information_Records.GENDER.setText(age);
                          Students_Information_Records.IP.setText(ip);
                           Students_Information_Records.IP_STATUS.setText(ipstat);
                            Students_Information_Records.MOTHER_TONGUE.setText(mothertongue);
                             Students_Information_Records.ADDRESS.setText(address);
                              Students_Information_Records.ZIPCODE.setText(zip);
                               Students_Information_Records.FATHER.setText(father);
                                Students_Information_Records.MOTHER.setText(mother);
                                 Students_Information_Records.GUARDIAN.setText(guard);
                                  Students_Information_Records.CELPHONE.setText(cp);
                                   Students_Information_Records.TELEPHONE.setText(tell);
                                    Students_Information_Records.LAST_GRADE_LEVEL.setText(lastgrade);
                                     Students_Information_Records.LAST_SCHOOL_YEAR.setText(lstsy);
                                      Students_Information_Records.SCHOOL_NAME.setText(schoolname);
                                       Students_Information_Records.SCHOOL_ID.setText(schoolid);
                                        Students_Information_Records.SCHOOL_ADDRESS.setText(schooladd);
                                         Students_Information_Records.SEMESTER.setText(sem);
                                          Students_Information_Records.TRACK.setText(track);
                                           Students_Information_Records.STRAND.setText(strand);
                                            Students_Information_Records.GRADE_LEVEL.setText(grade);
                                             Students_Information_Records.ENROLLED_TRACK.setText(trackenroll);
                                              
                             
                  
                  
                  
                   this.show(true);
                   dk.setVisible(true);
                   
                
                
    }//GEN-LAST:event_jTableMouseClicked

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate

       LoadSearchData();
    }//GEN-LAST:event_searchCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Student_Info_Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Student_Info_Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Student_Info_Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Student_Info_Record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search_Student_Info_Record().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
